@page "/Login"
@using Microsoft.AspNetCore.Http
@using web.Models
@inject HttpClient HttpClient
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NavManager

<div id="user-form-wrapper">
    <h1>Login</h1>
    <form>
        <div class="input-field">
            <label for="username-field">
                Username <span class="required">*</span>
            </label>
            <input type="text" name="username" id="username-field" @bind="LoginModel.Username" required autofocus/>
        </div>
        <div class="input-field">
            <label for="pwd-field">
                Password <span class="required">*</span>
            </label>
            <div class="pwd-group">
                <input type="password" name="pwd" id="pwd-field" @bind="LoginModel.Password" required/>
                <i class="fa-solid fa-eye" onclick="togglePasswordVisibility(this)"></i>
            </div>
        </div>
        <div class="login-response small"></div>
        <button @onclick="() => Authenticate()" class="btn" data-style="primary" type="submit">Enter</button>
    </form>
    <div class="redirect-link">
        <p class="small">
            Don't have an account? <a href="/register">Register</a>
        </p>
    </div>
</div>

@code {
    private readonly Models.Login LoginModel = new();

    private async Task Authenticate()
    {
        var response = await HttpClient.PostAsJsonAsync("auth/signin", LoginModel);

        if (response.IsSuccessStatusCode)
        {
            var loginResponse = response.Content.ReadFromJsonAsync<AuthenticationToken>();
            var login = new AuthenticationToken
            {
                UserId = loginResponse.Result.UserId,
                Role = loginResponse.Result.Role,
                Token = loginResponse.Result.Token,
                Username = loginResponse.Result.Username
            };

            if (loginResponse is not null)
            {
                httpContextAccessor.HttpContext.Session.SetString("id", login.UserId.ToString());
                httpContextAccessor.HttpContext.Session.SetString("role", login.Role);
                httpContextAccessor.HttpContext.Session.SetString("token", login.Token);
                httpContextAccessor.HttpContext.Session.SetString("username", login.Username);
                NavManager.NavigateTo("/welcomePage");
            }
        }
    }

}