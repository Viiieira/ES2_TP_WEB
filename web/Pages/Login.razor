@page "/Login"
@using Microsoft.AspNetCore.Http
@using web.Models
@inject HttpClient HttpClient
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NavManager

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Login Page</title>
    <link rel="stylesheet" href="bootstrap-5.0.2-dist/css/bootstrap-grid.min.css">
</head>
<body>
<section id="login-form">
    <h1>Login</h1>

    <form>
        <div class="input-field">
            <label for="username">Username:</label>
            <input class="input rounded-sm" type="text" name="username" @bind="LoginModel.Username"/>
        </div>
        <div class="input-field">
            <label for="password">Password:</label>
            <input class="input rounded-sm" type="password" name="password" @bind="LoginModel.Password"/>
        </div>
        <button @onclick="() => Authenticate()" class="btn rounded-sm" data-style="primary">Login</button>
    </form>
</section>
</body>
</html>

@code {
    private Models.Login LoginModel = new Models.Login();

    private async Task Authenticate()
    {
        var response = await HttpClient.PostAsJsonAsync<Models.Login>("auth/signin", LoginModel);

        if (response.IsSuccessStatusCode)
        {
            var loginResponse = response.Content.ReadFromJsonAsync<Models.AuthenticationToken>();
            AuthenticationToken login = new AuthenticationToken()
            {
                UserId = loginResponse.Result.UserId,
                Role = loginResponse.Result.Role,
                Token = loginResponse.Result.Token,
                Username = loginResponse.Result.Username
            };

            if (loginResponse is not null)
            {
                httpContextAccessor.HttpContext.Session.SetString("id", login.UserId.ToString());
                httpContextAccessor.HttpContext.Session.SetString("role", login.Role);
                httpContextAccessor.HttpContext.Session.SetString("token", login.Token);
                httpContextAccessor.HttpContext.Session.SetString("username", login.Username);
                NavManager.NavigateTo("/welcomePage");
            }
        }
        else
        {
        }
    }

}